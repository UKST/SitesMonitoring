// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SitesMonitoring.DAL;

namespace SitesMonitoring.DAL.Migrations
{
    [DbContext(typeof(SitesMonitoringDbContext))]
    [Migration("20190430180245_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SitesMonitoring.BLL.Monitoring.MonitoringEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("PeriodInMinutes");

                    b.Property<long>("SiteId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("MonitoringEntities");
                });

            modelBuilder.Entity("SitesMonitoring.BLL.Monitoring.MonitoringResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Data")
                        .HasColumnType("jsonb");

                    b.Property<long>("MonitoringEntityId");

                    b.HasKey("Id");

                    b.HasIndex("MonitoringEntityId");

                    b.ToTable("MonitoringResults");
                });

            modelBuilder.Entity("SitesMonitoring.BLL.Monitoring.SitesAPI.Site", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("SitesMonitoring.BLL.Monitoring.MonitoringEntity", b =>
                {
                    b.HasOne("SitesMonitoring.BLL.Monitoring.SitesAPI.Site", "Site")
                        .WithMany("MonitoringEntities")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SitesMonitoring.BLL.Monitoring.MonitoringResult", b =>
                {
                    b.HasOne("SitesMonitoring.BLL.Monitoring.MonitoringEntity", "MonitoringEntity")
                        .WithMany("MonitoringResults")
                        .HasForeignKey("MonitoringEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
